{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Weather=()=>{const[city,setCity]=useState('');const[weatherData,setWeatherData]=useState(null);const[error,setError]=useState('');// Function to fetch weather data\nconst fetchWeather=async city=>{setError('');try{const response=await axios.get(`http://api.openweathermap.org/data/2.5/weather`,{params:{q:city,appid:'8025ea4e09ae8804262971bdf9a4bddc',// Replace with your OpenWeatherMap API key\nunits:'metric'}});setWeatherData(response.data);}catch(err){setError('Error fetching weather data. Please try again.');setWeatherData(null);}};// Automatically fetch weather data based on user's location\nuseEffect(()=>{const getUserLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;try{const response=await axios.get(`http://api.openweathermap.org/data/2.5/weather`,{params:{lat:latitude,lon:longitude,appid:'8025ea4e09ae8804262971bdf9a4bddc',// Replace with your OpenWeatherMap API key\nunits:'metric'}});setWeatherData(response.data);}catch(err){setError('Error fetching weather data based on location.');}},error=>{console.error('Error getting location:',error);setError('Could not retrieve location.');});}else{setError('Geolocation is not supported by this browser.');}};getUserLocation();},[]);const handleFetchWeather=()=>{if(city){fetchWeather(city);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"rainbow\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"clouds\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"}),/*#__PURE__*/_jsx(\"div\",{className:\"raindrop\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Weather App\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter city\",value:city,onChange:e=>setCity(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFetchWeather,children:\"Get Weather\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),weatherData&&/*#__PURE__*/_jsxs(\"div\",{className:\"weather-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:weatherData.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Temperature: \",weatherData.main.temp,\" \\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Weather: \",weatherData.weather[0].description]})]})]})]});};export default Weather;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Weather","city","setCity","weatherData","setWeatherData","error","setError","fetchWeather","response","get","params","q","appid","units","data","err","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lon","console","handleFetchWeather","children","className","type","placeholder","value","onChange","e","target","onClick","name","main","temp","weather","description"],"sources":["C:/Users/llach/Desktop/weather-app/src/components/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Weather = () => {\r\n    const [city, setCity] = useState('');\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    // Function to fetch weather data\r\n    const fetchWeather = async (city) => {\r\n        setError('');\r\n        try {\r\n            const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather`, {\r\n                params: {\r\n                    q: city,\r\n                    appid: '8025ea4e09ae8804262971bdf9a4bddc', // Replace with your OpenWeatherMap API key\r\n                    units: 'metric',\r\n                },\r\n            });\r\n            setWeatherData(response.data);\r\n        } catch (err) {\r\n            setError('Error fetching weather data. Please try again.');\r\n            setWeatherData(null);\r\n        }\r\n    };\r\n\r\n    // Automatically fetch weather data based on user's location\r\n    useEffect(() => {\r\n        const getUserLocation = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    async (position) => {\r\n                        const { latitude, longitude } = position.coords;\r\n                        try {\r\n                            const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather`, {\r\n                                params: {\r\n                                    lat: latitude,\r\n                                    lon: longitude,\r\n                                    appid: '8025ea4e09ae8804262971bdf9a4bddc', // Replace with your OpenWeatherMap API key\r\n                                    units: 'metric',\r\n                                },\r\n                            });\r\n                            setWeatherData(response.data);\r\n                        } catch (err) {\r\n                            setError('Error fetching weather data based on location.');\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        console.error('Error getting location:', error);\r\n                        setError('Could not retrieve location.');\r\n                    }\r\n                );\r\n            } else {\r\n                setError('Geolocation is not supported by this browser.');\r\n            }\r\n        };\r\n\r\n        getUserLocation();\r\n    }, []);\r\n\r\n    const handleFetchWeather = () => {\r\n        if (city) {\r\n            fetchWeather(city);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rainbow\"></div>\r\n            <div className=\"clouds\">\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"cloud\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n                <div className=\"raindrop\"></div>\r\n            </div>\r\n\r\n            <div className=\"weather-container\">\r\n                <h1>Weather App</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter city\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                />\r\n                <button onClick={handleFetchWeather}>Get Weather</button>\r\n\r\n                {error && <p className=\"error\">{error}</p>}\r\n                \r\n                {weatherData && (\r\n                    <div className=\"weather-info\">\r\n                        <h2>{weatherData.name}</h2>\r\n                        <p>Temperature: {weatherData.main.temp} Â°C</p>\r\n                        <p>Weather: {weatherData.weather[0].description}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}